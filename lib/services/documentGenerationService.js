import { OpenAI } from 'openai';

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export async function generateProfessionalDocument(request) {
  try {
    console.log(`🤖 Generating AI-powered document: ${request.templateName}`);
    
    if (openai && process.env.OPENAI_API_KEY) {
      try {
        console.log('🤖 Using OpenAI for professional document generation');
        const aiDocument = await generateAIEnhancedDocument(request);
        return {
          success: true,
          document: aiDocument
        };
      } catch (aiError) {
        console.warn('⚠️ AI generation failed, falling back to template:', aiError);
        return {
          success: true,
          document: generateBasicTemplate(request),
          warning: 'AI generation failed - using enhanced template'
        };
      }
    } else {
      console.log('📝 OpenAI not available, using enhanced template');
      return {
        success: true,
        document: generateBasicTemplate(request),
        warning: 'AI service unavailable - using enhanced template'
      };
    }
    
  } catch (error) {
    console.error('❌ Error generating document:', error);
    
    return {
      success: true,
      document: generateBasicTemplate(request),
      warning: 'Using fallback template due to processing error'
    };
  }
}

async function generateAIEnhancedDocument(request) {
  const today = new Date().toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });

  const systemPrompt = `You are a professional legal document generator. Create a comprehensive ${request.templateName} that looks and reads like it came from a real law firm.

Requirements:
- Use professional, formal business language
- Include proper headers, sections, and formatting
- Add signature lines and date fields
- Include legal disclaimers where appropriate
- Make it comprehensive and realistic
- Use proper business letter format
- Include all standard clauses for this document type`;

  const formDataText = Object.entries(request.formData)
    .filter(([key]) => key !== 'company_logo')
    .map(([key, value]) => {
      if (typeof value === 'object' && value?.street) {
        return `${key}: ${value.street}, ${value.city}, ${value.state} ${value.zip}, ${value.country}`;
      } else if (Array.isArray(value)) {
        return `${key}: ${value.join(', ')}`;
      }
      return `${key}: ${value}`;
    })
    .join('\n');

  const userPrompt = `Create a professional ${request.templateName} dated ${today} with the following information:

${formDataText}

Make this document comprehensive, realistic, and professionally formatted.`;

  const response = await openai.chat.completions.create({
    model: 'gpt-4',
    messages: [
      { role: 'system', content: systemPrompt },
      { role: 'user', content: userPrompt }
    ],
    temperature: 0.1,
    max_tokens: 2000,
  });

  const content = response.choices[0]?.message?.content;
  if (!content) {
    throw new Error('No content generated by AI');
  }

  return content;
}

function generateBasicTemplate(request) {
  const today = new Date().toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });

  const formatAddress = (addr) => {
    if (!addr || typeof addr !== 'object') return '[Address]';
    return `${addr.street || '[Street]'}, ${addr.city || '[City]'}, ${addr.state || '[State]'} ${addr.zip || '[ZIP]'}, ${addr.country || '[Country]'}`;
  };

  return `${request.templateName.toUpperCase()}

${today}

This document serves as a ${request.templateName.toLowerCase()} between the parties listed below.

${Object.entries(request.formData).map(([key, value]) => {
    if (key === 'company_logo') return '';
    if (typeof value === 'object' && value?.street) {
      return `${key.replace(/_/g, ' ').toUpperCase()}: ${formatAddress(value)}`;
    }
    return `${key.replace(/_/g, ' ').toUpperCase()}: ${value || 'Not specified'}`;
  }).filter(Boolean).join('\n\n')}

The parties agree to the terms and conditions as outlined in this document.

SIGNATURES

Party 1: _________________________    Date: _________

Party 2: _________________________    Date: _________

This document was generated on ${today} using professional legal templates.`;
}
