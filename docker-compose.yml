version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7
    container_name: legal-chat-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-defaultpassword}
      MONGO_INITDB_DATABASE: legal-ai
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    networks:
      - legal-chat-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: legal-chat-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: 3001
      MONGODB_URI: mongodb://admin:${MONGO_ROOT_PASSWORD:-defaultpassword}@mongodb:27017/legal-ai?authSource=admin
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      MAX_FILE_SIZE: ${MAX_FILE_SIZE:-10485760}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    volumes:
      - ./backend/uploads:/app/uploads
      - ./backend/logs:/app/logs
    depends_on:
      - mongodb
    networks:
      - legal-chat-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL:-http://localhost:3001}
    container_name: legal-chat-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - legal-chat-network

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: legal-chat-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./deployment/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - legal-chat-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  legal-chat-network:
    driver: bridge